[versions]
agp = "8.13.0"
androidx-activityCompose = "1.11.0"
androidx-appcompat = "1.7.1"
androidx-core-ktx = "1.17.0"
androidx-espresso-core = "3.7.0"
androidx-lifecycle = "2.9.4"
android-tools = "31.13.0"
androidx-test-junit = "1.3.0"
compose-multiplatform = "1.9.0"
android-desugar-jdk-libs = "2.1.5"
junit = "4.13.2"
kotlin = "2.2.20"
kotlin-serilization-json = "1.9.0"
kotlin-datetime = "0.7.1"
kotlin-coroutines = "1.10.2"
navigation-compose = "2.9.0"
ksp = "2.2.20-2.0.2"
room = "2.8.0"
sqplite-bundled = "2.6.0"
ktorfit = "2.6.4"
ktorfit-ksp = "2.6.4"
ktor = "3.3.0"
buildkonfig = "0.17.1"
datastore = "1.1.7"
okio = "3.16.0"
mokkery = "2.10.0"
android-compose = "1.9.1"
robol-ectiric = "4.16"
kotlin-inject = "0.8.0"
coil = "3.3.0"
ktlint = "13.1.0"
kover = "0.9.2"

# android app values
android-compileSdk = "36"
android-minSdk = "23"
android-targetSdk = "36"
material3Android = "1.3.2"

# compiler
kotlin-poet = "2.2.0"
auto-service = "1.1.1"
auto-service-ksp = "1.2.0"

[libraries]
# compiler
auto-service-annotations = { module = "com.google.auto.service:auto-service-annotations", version.ref = "auto-service" }
auto-service-ksp = { module = "dev.zacsweers.autoservice:auto-service-ksp", version.ref = "auto-service-ksp" }
kotlin-poet = { module = "com.squareup:kotlinpoet", version.ref = "kotlin-poet" }
kotlin-poet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlin-poet" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
ksp = { module = "com.google.devtools.ksp:symbol-processing", version.ref = "ksp" }
ksp-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
ksp-embeddable = { module = "com.google.devtools.ksp:symbol-processing-aa-embeddable", version.ref = "ksp" }

# test
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest", version.ref = "android-compose" }
androidx-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4-android", version.ref = "android-compose" }
robolectric = { group = "org.robolectric", name = "robolectric", version.ref = "robol-ectiric" }

# core libraries
android-desugar-jdk-libs = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "android-desugar-jdk-libs" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

androidx-datastore-core = { group = "androidx.datastore", name = "datastore-core", version.ref = "datastore" }
androidx-datastore-preferences-core = { group = "androidx.datastore", name = "datastore-preferences-core", version.ref = "datastore" }
androidx-datastore-core-okio = { group = "androidx.datastore", name = "datastore-core-okio", version.ref = "datastore" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }

kotlin-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlin-serilization-json" }
kotlin-serialization-json-okio = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json-okio", version.ref = "kotlin-serilization-json" }
kotlin-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlin-datetime" }

kotlin-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlin-coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "kotlin-coroutines" }
kotlin-coroutines-darwin = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-darwin", version.ref = "kotlin-coroutines" }

kotlin-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "kotlin-coroutines" }

navigation-compose = { group = "org.jetbrains.androidx.navigation", name = "navigation-compose", version.ref = "navigation-compose" }
compose-material-icons = { group = "org.jetbrains.compose.material", name = "material-icons-core", version = "1.7.3" }

kotlin-inject-runtime = { group = "me.tatarka.inject", name = "kotlin-inject-runtime-kmp", version.ref = "kotlin-inject" }
kotlin-inject-compiler-ksp = { group = "me.tatarka.inject", name = "kotlin-inject-compiler-ksp", version.ref = "kotlin-inject" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }

ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

ktorfit-lib-light = { group = "de.jensklingenberg.ktorfit", name = "ktorfit-lib-light", version.ref = "ktorfit" }
ktorfit-ksp = { group = "de.jensklingenberg.ktorfit", name = "ktorfit-ksp", version.ref = "ktorfit-ksp" }

room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqplite-bundled" }

coil-compose = { group = "io.coil-kt.coil3", name = "coil-compose", version.ref = "coil" }
coil-network = { group = "io.coil-kt.coil3", name = "coil-network-ktor3", version.ref = "coil" }


# conventions plugin references
android-gradle-plugin = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
android-tools-common-plugin = { group = "com.android.tools", name = "common", version.ref = "android-tools" }
compose-gradle-plugin = { group = "org.jetbrains.compose", name = "compose-gradle-plugin", version.ref = "compose-multiplatform" }
compose-compiler-gradle-plugin = { group = "org.jetbrains.kotlin", name = "compose-compiler-gradle-plugin", version.ref = "kotlin" }
kotlin-multiplatform-plugin = { group = "org.jetbrains.kotlin.multiplatform", name = "org.jetbrains.kotlin.multiplatform.gradle.plugin", version.ref = "kotlin" }
kotlin-serialization-plugin = { group = "org.jetbrains.kotlin.plugin.serialization", name = "org.jetbrains.kotlin.plugin.serialization.gradle.plugin", version.ref = "kotlin" }
kotlin-gradle-plugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
ksp-gradle-plugin = { group = "com.google.devtools.ksp", name = "com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
room-gradle-plugin = { group = "androidx.room", name = "room-gradle-plugin", version.ref = "room" }
ktorfit-gradle-plugin = { group = "de.jensklingenberg.ktorfit", name = "ktorfit-gradle-plugin", version.ref = "ktorfit" }
buildkonfig-gradle-plugin = { group = "com.codingfeline.buildkonfig", name = "buildkonfig-gradle-plugin", version.ref = "buildkonfig" }
buildkonfig-compiler-gradle-plugin = { group = "com.codingfeline.buildkonfig", name = "buildkonfig-compiler", version.ref = "buildkonfig" }
mokkery-gradle-plugin = { group = "dev.mokkery", name = "mokkery-gradle", version.ref = "mokkery" }
ktlint-gradle-plugin = { group = "org.jlleitschuh.gradle", name = "ktlint-gradle", version.ref = "ktlint" }
kover-gradle-plugin = { group = "org.jetbrains.kotlinx", name = "kover-gradle-plugin", version.ref = "kover" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
ktorfit = { id = "de.jensklingenberg.ktorfit", version.ref = "ktorfit" }
buildkonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildkonfig" }
room = { id = "androidx.room", version.ref = "room" }
mokkery = { id = "dev.mokkery", version.ref = "mokkery" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
# compiler
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
# project plugins
td-multiplatform-domain = { id = "td.multiplatform.domain", version = "unspecified" }
td-multiplatform-data = { id = "td.multiplatform.data", version = "unspecified" }
td-multiplatform-library = { id = "td.multiplatform.library", version = "unspecified" }
td-multiplatform-ui = { id = "td.multiplatform.ui", version = "unspecified" }
td-multiplatform-app = { id = "td.multiplatform.app", version = "unspecified" }
td-multiplatform-common = { id = "td.multiplatform.common", version = "unspecified" }
td-multiplatform-room = { id = "td.multiplatform.room", version = "unspecified" }
td-multiplatform-mokkery = { id = "td.multiplatform.mokkery", version = "unspecified" }
td-multiplatform-ksp = { id = "td.multiplatform.ksp", version = "unspecified" }
td-multiplatform-kotlin-inject = { id = "td.multiplatform.kotlin.inject", version = "unspecified" }
td-multiplatform-kotlin-inject-common = { id = "td.multiplatform.kotlin.inject.common", version = "unspecified" }
td-build-konfig = { id = "td.build.konfig", version = "unspecified" }
td-kover = { id = "td.multiplatform.kover", version = "unspecified" }
